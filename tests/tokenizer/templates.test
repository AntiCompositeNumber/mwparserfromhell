name:   no_params
label:  simplest type of template
input:  "{{template}}"
output: [TemplateOpen(), Text(text="template"), TemplateClose()]

---

name:   one_param_unnamed
label:  basic template with one unnamed parameter
input:  "{{foo|bar}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="bar"), TemplateClose()]

---

name:   one_param_named
label:  basic template with one named parameter
input:  "{{foo|bar=baz}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="bar"), TemplateParamEquals(), Text(text="baz"), TemplateClose()]

---

name:   multiple_unnamed_params
label:  basic template with multiple unnamed parameters
input:  "{{foo|bar|baz|biz|buzz}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="bar"), TemplateParamSeparator(), Text(text="baz"), TemplateParamSeparator(), Text(text="biz"), TemplateParamSeparator(), Text(text="buzz"), TemplateClose()]

---

name:   multiple_named_params
label:  basic template with multiple named parameters
input:  "{{foo|bar=baz|biz=buzz|buff=baff|usr=bin}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="bar"), TemplateParamEquals(), Text(text="baz"), TemplateParamSeparator(), Text(text="biz"), TemplateParamEquals(), Text(text="buzz"), TemplateParamSeparator(), Text(text="buff"), TemplateParamEquals(), Text(text="baff"), TemplateParamSeparator(), Text(text="usr"), TemplateParamEquals(), Text(text="bin"), TemplateClose()]

---

name:   multiple_mixed_params
label:  basic template with multiple unnamed/named parameters
input:  "{{foo|bar=baz|biz|buzz=buff|usr|bin}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="bar"), TemplateParamEquals(), Text(text="baz"), TemplateParamSeparator(), Text(text="biz"), TemplateParamSeparator(), Text(text="buzz"), TemplateParamEquals(), Text(text="buff"), TemplateParamSeparator(), Text(text="usr"), TemplateParamSeparator(), Text(text="bin"), TemplateClose()]

---

name:   multiple_mixed_params2
label:  basic template with multiple unnamed/named parameters in another order
input:  "{{foo|bar|baz|biz=buzz|buff=baff|usr=bin}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="bar"), TemplateParamSeparator(), Text(text="baz"), TemplateParamSeparator(), Text(text="biz"), TemplateParamEquals(), Text(text="buzz"), TemplateParamSeparator(), Text(text="buff"), TemplateParamEquals(), Text(text="baff"), TemplateParamSeparator(), Text(text="usr"), TemplateParamEquals(), Text(text="bin"), TemplateClose()]

---

name:   nested_unnamed_param
label:  nested template as an unnamed parameter
input:  "{{foo|{{bar}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateClose()]

---

name:   nested_named_param_value
label:  nested template as a parameter value with a named parameter
input:  "{{foo|bar={{baz}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="bar"), TemplateParamEquals(), TemplateOpen(), Text(text="baz"), TemplateClose(), TemplateClose()]

---

name:   nested_named_param_name_and_value
label:  nested templates as a parameter name and value
input:  "{{foo|{{bar}}={{baz}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateParamEquals(), TemplateOpen(), Text(text="baz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_start
label:  nested template at the beginning of a template name
input:  "{{{{foo}}bar}}"
output: [TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), Text(text="bar"), TemplateClose()]

---

name:   nested_name_start_unnamed_param
label:  nested template at the beginning of a template name and as an unnamed parameter
input:  "{{{{foo}}bar|{{baz}}}}"
output: [TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), Text(text="bar"), TemplateParamSeparator(), TemplateOpen(), Text(text="baz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_start_named_param_value
label:  nested template at the beginning of a template name and as a parameter value with a named parameter
input:  "{{{{foo}}bar|baz={{biz}}}}"
output: [TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), Text(text="bar"), TemplateParamSeparator(), Text(text="baz"), TemplateParamEquals(), TemplateOpen(), Text(text="biz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_start_named_param_name_and_value
label:  nested template at the beginning of a template name and as a parameter name and value
input:  "{{{{foo}}bar|{{baz}}={{biz}}}}"
output: [TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), Text(text="bar"), TemplateParamSeparator(), TemplateOpen(), Text(text="baz"), TemplateClose(), TemplateParamEquals(), TemplateOpen(), Text(text="biz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_end
label:  nested template at the end of a template name
input:  "{{foo{{bar}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateClose()]

---

name:   nested_name_end_unnamed_param
label:  nested template at the end of a template name and as an unnamed parameter
input:  "{{foo{{bar}}|{{baz}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateParamSeparator(), TemplateOpen(), Text(text="baz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_end_named_param_value
label:  nested template at the end of a template name and as a parameter value with a named parameter
input:  "{{foo{{bar}}|baz={{biz}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateParamSeparator(), Text(text="baz"), TemplateParamEquals(), TemplateOpen(), Text(text="biz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_end_named_param_name_and_value
label:  nested template at the end of a template name and as a parameter name and value
input:  "{{foo{{bar}}|{{baz}}={{biz}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateParamSeparator(), TemplateOpen(), Text(text="baz"), TemplateClose(), TemplateParamEquals(), TemplateOpen(), Text(text="biz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_mid
label:  nested template in the middle of a template name
input:  "{{foo{{bar}}baz}}"
output: [TemplateOpen(), Text(text="foo"), TemplateOpen(), Text(text="bar"), TemplateClose(), Text(text="baz"), TemplateClose()]

---

name:   nested_name_mid_unnamed_param
label:  nested template in the middle of a template name and as an unnamed parameter
input:  "{{foo{{bar}}baz|{{biz}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateOpen(), Text(text="bar"), TemplateClose(), Text(text="baz"), TemplateParamSeparator(), TemplateOpen(), Text(text="biz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_mid_named_param_value
label:  nested template in the middle of a template name and as a parameter value with a named parameter
input:  "{{foo{{bar}}baz|biz={{buzz}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateOpen(), Text(text="bar"), TemplateClose(), Text(text="baz"), TemplateParamSeparator(), Text(text="biz"), TemplateParamEquals(), TemplateOpen(), Text(text="buzz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_mid_named_param_name_and_value
label:  nested template in the middle of a template name and as a parameter name and value
input:  "{{foo{{bar}}baz|{{biz}}={{buzz}}}}"
output: [TemplateOpen(), Text(text="foo"), TemplateOpen(), Text(text="bar"), TemplateClose(), Text(text="baz"), TemplateParamSeparator(), TemplateOpen(), Text(text="biz"), TemplateClose(), TemplateParamEquals(), TemplateOpen(), Text(text="buzz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_start_end
label:  nested template at the beginning and end of a template name
input:  "{{{{foo}}{{bar}}}}"
output: [TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateClose()]

---

name:   nested_name_start_end_unnamed_param
label:  nested template at the beginning and end of a template name and as an unnamed parameter
input:  "{{{{foo}}{{bar}}|{{baz}}}}"
output: [TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateParamSeparator(), TemplateOpen(), Text(text="baz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_start_end_named_param_value
label:  nested template at the beginning and end of a template name and as a parameter value with a named parameter
input:  "{{{{foo}}{{bar}}|baz={{biz}}}}"
output: [TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateParamSeparator(), Text(text="baz"), TemplateParamEquals(), TemplateOpen(), Text(text="biz"), TemplateClose(), TemplateClose()]

---

name:   nested_name_start_end_named_param_name_and_value
label:  nested template at the beginning and end of a template name and as a parameter name and value
input:  "{{{{foo}}{{bar}}|{{baz}}={{biz}}}}"
output: [TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), TemplateOpen(), Text(text="bar"), TemplateClose(), TemplateParamSeparator(), TemplateOpen(), Text(text="baz"), TemplateClose(), TemplateParamEquals(), TemplateOpen(), Text(text="biz"), TemplateClose(), TemplateClose()]

---

name:   nested_names_multiple
label:  multiple nested templates within nested templates
input:  "{{{{{{{{foo}}bar}}baz}}biz}}"
output: [TemplateOpen(), TemplateOpen(), TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), Text(text="bar"), TemplateClose(), Text(text="baz"), TemplateClose(), Text(text="biz"), TemplateClose()]

---

name:   nested_names_multiple_unnamed_param
label:  multiple nested templates within nested templates with a nested unnamed parameter
input:  "{{{{{{{{foo}}bar}}baz}}biz|{{buzz}}}}"
output: [TemplateOpen(), TemplateOpen(), TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), Text(text="bar"), TemplateClose(), Text(text="baz"), TemplateClose(), Text(text="biz"), TemplateParamSeparator(), TemplateOpen(), Text(text="buzz"), TemplateClose(), TemplateClose()]

---

name:   nested_names_multiple_named_param_value
label:  multiple nested templates within nested templates with a nested parameter value in a named parameter
input:  "{{{{{{{{foo}}bar}}baz}}biz|buzz={{bin}}}}"
output: [TemplateOpen(), TemplateOpen(), TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), Text(text="bar"), TemplateClose(), Text(text="baz"), TemplateClose(), Text(text="biz"), TemplateParamSeparator(), Text(text="buzz"), TemplateParamEquals(), TemplateOpen(), Text(text="bin"), TemplateClose(), TemplateClose()]

---

name:   nested_names_multiple_named_param_name_and_value
label:  multiple nested templates within nested templates with a nested parameter name and value
input:  "{{{{{{{{foo}}bar}}baz}}biz|{{buzz}}={{bin}}}}"
output: [TemplateOpen(), TemplateOpen(), TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), Text(text="bar"), TemplateClose(), Text(text="baz"), TemplateClose(), Text(text="biz"), TemplateParamSeparator(), TemplateOpen(), Text(text="buzz"), TemplateClose(), TemplateParamEquals(), TemplateOpen(), Text(text="bin"), TemplateClose(), TemplateClose()]

---

name:   mixed_nested_templates
label:  mixed assortment of nested templates within template names, parameter names, and values
input:  "{{{{{{{{foo}}bar|baz=biz}}buzz}}usr|{{bin}}}}"
output: [TemplateOpen(), TemplateOpen(), TemplateOpen(), TemplateOpen(), Text(text="foo"), TemplateClose(), Text(text="bar"), TemplateParamSeparator(), Text(text="baz"), TemplateParamEquals(), Text(text="biz"), TemplateClose(), Text(text="buzz"), TemplateClose(), Text(text="usr"), TemplateParamSeparator(), TemplateOpen(), Text(text="bin"), TemplateClose(), TemplateClose()]

---

name:   newline_start
label:  a newline at the start of a template name
input:  "{{\nfoobar}}"
output: [TemplateOpen(), Text(text="\nfoobar"), TemplateClose()]

---

name:   newline_end
label:  a newline at the end of a template name
input:  "{{foobar\n}}"
output: [TemplateOpen(), Text(text="foobar\n"), TemplateClose()]

---

name:   newline_start_end
label:  a newline at the start and end of a template name
input:  "{{\nfoobar\n}}"
output: [TemplateOpen(), Text(text="\nfoobar\n"), TemplateClose()]

---

name:   newline_mid
label:  a newline at the middle of a template name
input:  "{{foo\nbar}}"
output: [Text(text="{{foo\nbar}}")]

---

name:   newline_start_mid
label:  a newline at the start and middle of a template name
input:  "{{\nfoo\nbar}}"
output: [Text(text="{{\nfoo\nbar}}")]

---

name:   newline_mid_end
label:  a newline at the middle and end of a template name
input:  "{{foo\nbar\n}}"
output: [Text(text="{{foo\nbar\n}}")]

---

name:   newline_start_mid_end
label:  a newline at the start, middle, and end of a template name
input:  "{{\nfoo\nbar\n}}"
output: [Text(text="{{\nfoo\nbar\n}}")]

---

name:   newline_unnamed_param_start
label:  a newline at the start of an unnamed template parameter
input:  "{{foo|\nbar}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="\nbar"), TemplateClose()]

---

name:   newline_unnamed_param_end
label:  a newline at the end of an unnamed template parameter
input:  "{{foo|bar\n}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="bar\n"), TemplateClose()]

---

name:   newline_unnamed_param_start_end
label:  a newline at the start and end of an unnamed template parameter
input:  "{{foo|\nbar\n}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="\nbar\n"), TemplateClose()]

---

name:   newline_unnamed_param_start_mid
label:  a newline at the start and middle of an unnamed template parameter
input:  "{{foo|\nb\nar}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="\nb\nar"), TemplateClose()]

---

name:   newline_unnamed_param_mid_end
label:  a newline at the middle and end of an unnamed template parameter
input:  "{{foo|b\nar\n}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="b\nar\n"), TemplateClose()]

---

name:   newline_unnamed_param_start_mid_end
label:  a newline at the start, middle, and end of an unnamed template parameter
input:  "{{foo|\nb\nar\n}}"
output: [TemplateOpen(), Text(text="foo"), TemplateParamSeparator(), Text(text="\nb\nar\n"), TemplateClose()]

---

name:   newline_start_unnamed_param_start
label:  a newline at the start of a template name and at the start of an unnamed template parameter
input:  "{{\nfoo|\nbar}}"
output: [TemplateOpen(), Text(text="\nfoo"), TemplateParamSeparator(), Text(text="\nbar"), TemplateClose()]

---

name:   newline_start_unnamed_param_end
label:  a newline at the start of a template name and at the end of an unnamed template parameter
input:  "{{\nfoo|bar\n}}"
output: [TemplateOpen(), Text(text="\nfoo"), TemplateParamSeparator(), Text(text="bar\n"), TemplateClose()]

---

name:   newline_start_unnamed_param_start_end
label:  a newline at the start of a template name and at the start and end of an unnamed template parameter
input:  "{{\nfoo|\nbar\n}}"
output: [TemplateOpen(), Text(text="\nfoo"), TemplateParamSeparator(), Text(text="\nbar\n"), TemplateClose()]

---

name:   newline_start_unnamed_param_start_mid
label:  a newline at the start of a template name and at the start and middle of an unnamed template parameter
input:  "{{\nfoo|\nb\nar}}"
output: [TemplateOpen(), Text(text="\nfoo"), TemplateParamSeparator(), Text(text="\nb\nar"), TemplateClose()]

---

name:   newline_start_unnamed_param_mid_end
label:  a newline at the start of a template name and at the middle and end of an unnamed template parameter
input:  "{{\nfoo|b\nar\n}}"
output: [TemplateOpen(), Text(text="\nfoo"), TemplateParamSeparator(), Text(text="b\nar\n"), TemplateClose()]

---

name:   newline_start_unnamed_param_start_mid_end
label:  a newline at the start of a template name and at the start, middle, and end of an unnamed template parameter
input:  "{{\nfoo|\nb\nar\n}}"
output: [TemplateOpen(), Text(text="\nfoo"), TemplateParamSeparator(), Text(text="\nb\nar\n"), TemplateClose()]

---

name:   newline_end_unnamed_param_start
label:  a newline at the end of a template name and at the start of an unnamed template parameter
input:  "{{foo\n|\nbar}}"
output: [TemplateOpen(), Text(text="foo\n"), TemplateParamSeparator(), Text(text="\nbar"), TemplateClose()]

---

name:   newline_end_unnamed_param_end
label:  a newline at the end of a template name and at the end of an unnamed template parameter
input:  "{{foo\n|bar\n}}"
output: [TemplateOpen(), Text(text="foo\n"), TemplateParamSeparator(), Text(text="bar\n"), TemplateClose()]

---

name:   newline_end_unnamed_param_start_end
label:  a newline at the end of a template name and at the start and end of an unnamed template parameter
input:  "{{foo\n|\nbar\n}}"
output: [TemplateOpen(), Text(text="foo\n"), TemplateParamSeparator(), Text(text="\nbar\n"), TemplateClose()]

---

name:   newline_end_unnamed_param_start_mid
label:  a newline at the end of a template name and at the start and middle of an unnamed template parameter
input:  "{{foo\n|\nb\nar}}"
output: [TemplateOpen(), Text(text="foo\n"), TemplateParamSeparator(), Text(text="\nb\nar"), TemplateClose()]

---

name:   newline_end_unnamed_param_mid_end
label:  a newline at the end of a template name and at the middle and end of an unnamed template parameter
input:  "{{foo\n|b\nar\n}}"
output: [TemplateOpen(), Text(text="foo\n"), TemplateParamSeparator(), Text(text="b\nar\n"), TemplateClose()]

---

name:   newline_end_unnamed_param_start_mid_end
label:  a newline at the end of a template name and at the start, middle, and end of an unnamed template parameter
input:  "{{foo\n|\nb\nar\n}}"
output: [TemplateOpen(), Text(text="foo\n"), TemplateParamSeparator(), Text(text="\nb\nar\n"), TemplateClose()]

---

name:   newline_start_end_unnamed_param_end
label:  a newline at the start and end of a template name and the start of an unnamed template parameter
input:  "{{\nfoo\n|\nbar}}"
output: [TemplateOpen(), Text(text="\nfoo\n"), TemplateParamSeparator(), Text(text="\nbar"), TemplateClose()]

---

name:   newline_start_end_unnamed_param_end
label:  a newline at the start and end of a template name and the end of an unnamed template parameter
input:  "{{\nfoo\n|bar\n}}"
output: [TemplateOpen(), Text(text="\nfoo\n"), TemplateParamSeparator(), Text(text="bar\n"), TemplateClose()]

---

name:   newline_start_end_unnamed_param_start_end
label:  a newline at the start and end of a template name and the start and end of an unnamed template parameter
input:  "{{\nfoo\n|\nbar\n}}"
output: [TemplateOpen(), Text(text="\nfoo\n"), TemplateParamSeparator(), Text(text="\nbar\n"), TemplateClose()]

---

name:   newline_start_end_unnamed_param_start_mid
label:  a newline at the start and end of a template name and the start and middle of an unnamed template parameter
input:  "{{\nfoo\n|\nb\nar}}"
output: [TemplateOpen(), Text(text="\nfoo\n"), TemplateParamSeparator(), Text(text="\nb\nar"), TemplateClose()]

---

name:   newline_start_end_unnamed_param_mid_end
label:  a newline at the start and end of a template name and the middle and end of an unnamed template parameter
input:  "{{\nfoo\n|b\nar\n}}"
output: [TemplateOpen(), Text(text="\nfoo\n"), TemplateParamSeparator(), Text(text="b\nar\n"), TemplateClose()]

---

name:   newline_start_end_unnamed_param_start_mid_end
label:  a newline at the start and end of a template name and the start, middle, and end of an unnamed template parameter
input:  "{{\nfoo\n|\nb\nar\n}}"
output: [TemplateOpen(), Text(text="\nfoo\n"), TemplateParamSeparator(), Text(text="\nb\nar\n"), TemplateClose()]

---

name:   newline_mid_unnamed_param_start
label:  a newline at the middle of a template name and at the start of an unnamed template parameter
input:  "{{f\noo|\nbar}}"
output: [Text(text="{{f\noo|\nbar}}")]

---

name:   newline_start_mid_unnamed_param_start
label:  a newline at the start and middle of a template name and at the start of an unnamed template parameter
input:  "{{\nf\noo|\nbar}}"
output: [Text(text="{{\nf\noo|\nbar}}")]

---

name:   newline_start_end_unnamed_param_start
label:  a newline at the middle and of a template name and at the start of an unnamed template parameter
input:  "{{f\noo\n|\nbar}}"
output: [Text(text="{{f\noo\n|\nbar}}")]

---

name:   newline_start_mid_end_unnamed_param_start
label:  a newline at the start, middle, and end of a template name and at the start of an unnamed template parameter
input:  "{{\nf\noo\n|\nbar}}"
output: [Text(text="{{\nf\noo\n|\nbar}}")]

---

name:   incomplete_tests

"{{foo|1=\nbar}}"
"{{foo|1=bar\n}}"
"{{foo|1=\nbar\n}}"
"{{foo|1=\nb\nar}}"
"{{foo|1=b\nar\n}}"
"{{foo|1=\nb\nar\n}}"
"{{foo|\nbar=baz}}"
"{{foo|bar\n=baz}}"
"{{foo|\nbar\n=baz}}"
"{{foo|\nb\nar=baz}}"
"{{foo|b\nar\n=baz}}"
"{{foo|\nb\nar\n=baz}}"
"{{foo|\nbar=baz\n}}"
"{{foo|bar\n=baz\n}}"
"{{foo|\nbar\n=baz\n}}"
"{{foo|\nb\nar=baz\n}}"
"{{foo|b\nar\n=baz\n}}"
"{{foo|\nb\nar\n=baz\n}}"
"{{foo|\nbar=\nbaz}}"
"{{foo|bar\n=\nbaz}}"
"{{foo|\nbar\n=\nbaz}}"
"{{foo|\nb\nar=\nbaz}}"
"{{foo|b\nar\n=\nbaz}}"
"{{foo|\nb\nar\n=\nbaz}}"
"{{foo|\nbar=\nbaz\n}}"
"{{foo|bar\n=\nbaz\n}}"
"{{foo|\nbar\n=\nbaz\n}}"
"{{foo|\nb\nar=\nbaz\n}}"
"{{foo|b\nar\n=\nbaz\n}}"
"{{foo|\nb\nar\n=\nbaz\n}}"
"{{foo|\nbar=ba\nz}}"
"{{foo|bar\n=ba\nz}}"
"{{foo|\nbar\n=ba\nz}}"
"{{foo|\nb\nar=ba\nz}}"
"{{foo|b\nar\n=ba\nz}}"
"{{foo|\nb\nar\n=ba\nz}}"

"{{\nfoo\n|\nbar\n=\nb\naz\n|\nb\nuz\n}}"
"{{\nfoo\n|\nb\nar\n|\nbaz\n=\nb\nuz\n}}"

"{{\nfoo\n|\n{{\nbar\n|\nbaz\n=\nb\niz\n}}\n=\nb\nuzz\n}}"

"{{foo{bar}}"
"{{foo}bar}}"
"{{{foobar}}"
"{{foo{b{ar}}"
"{{foo[bar}}"
"{{foo]bar}}"
"{{[foobar}}"
"{{foobar]}}"

"{{foo|ba{r}}"
"{{foo|ba{r}}}"
"{{foo|ba{r}=baz}}"
"{{foo|ba[r]}}"

"{{foobar"
"{{foobar}"
"{{foobar|"
"{{foo|bar"
"{{foo|bar|"
"{{foo|bar="
"{{foo|bar=|"
"{{foo|bar=baz"
"{{foo|bar=baz|"
"{{foo|bar|baz"
"{{foo|bar|baz="
"{{foo|bar|baz=biz"
"{{foo|bar=baz|biz"
"{{foo|bar=baz|biz="
"{{foo|bar=baz|biz=buzz"
